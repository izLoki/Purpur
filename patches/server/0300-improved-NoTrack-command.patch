From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: izLoki <izLoki011@gmail.com>
Date: Mon, 19 Aug 2024 14:50:55 -0300
Subject: [PATCH] improved NoTrack command


diff --git a/src/main/java/org/purpurmc/purpur/PurpurConfig.java b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
index a04b778892adf9e5cda5081e7d95601c78d6efce..96b35f51608a58bd207adb7de6db595395187bb4 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
@@ -350,6 +350,7 @@ public class PurpurConfig {
         config.set("notrack.locations." + locationData.getName() + ".range", locationData.getRange());
         config.set("notrack.locations." + locationData.getName() + ".rangeY", locationData.getRangeY());
         config.set("notrack.locations." + locationData.getName() + ".initLocation", getLocationDataToString(locationData.getInitLocation()));
+        config.set("notrack.locations." + locationData.getName() + ".enabled", locationData.enabled);
 
         if(save) {
             try {
diff --git a/src/main/java/org/purpurmc/purpur/command/NoTrackCommand.java b/src/main/java/org/purpurmc/purpur/command/NoTrackCommand.java
index 73a2a9644116e9f11d8ab10be7cac1b6e7a6a2ca..bf6c1a8fc9723b73fd71d561cddebec3d022a146 100644
--- a/src/main/java/org/purpurmc/purpur/command/NoTrackCommand.java
+++ b/src/main/java/org/purpurmc/purpur/command/NoTrackCommand.java
@@ -16,17 +16,20 @@ public class NoTrackCommand extends Command {
     public NoTrackCommand(String name) {
         super(name);
         this.description = "Purpur notrack related commands";
-        this.usageMessage = "/notrack [set | remove | init | range | yrange] [name] [range] [rangeY]";
+        this.usageMessage = "/notrack [list | create | remove | range | yrange | toggle] [name] [range]";
         this.setPermission("bukkit.command.notrack");
     }
 
     @Override
     public List<String> tabComplete(CommandSender sender, String alias, String[] args, Location location) throws IllegalArgumentException {
         if (args.length == 1) {
-            return Stream.of("set", "remove", "range", "yrange", "init", "toggle")
+            return Stream.of("list", "create" , "remove", "setloc", "yrange", "range", "toggle")
                 .filter(arg -> arg.startsWith(args[0].toLowerCase()))
                 .collect(Collectors.toList());
         }
+        if (args.length == 2) {
+            return PurpurConfig.notrackLocations.stream().map(PurpurConfig.LocationData::getName).toList();
+        }
         return Collections.emptyList();
     }
 
@@ -49,7 +52,7 @@ public class NoTrackCommand extends Command {
         }
 
         if(args.length == 4) {
-            if(args[0].equalsIgnoreCase("set")) {
+            if(args[0].equalsIgnoreCase("create")) {
                 String name = args[1];
                 int range = Integer.parseInt(args[2]), rangeY = Integer.parseInt(args[3]);
 
@@ -81,7 +84,7 @@ public class NoTrackCommand extends Command {
                 return true;
             }
 
-            if(args[0].equalsIgnoreCase("toggle")) {
+            if(args[0].equalsIgnoreCase("range")) {
                 String name = args[1];
 
                 if(PurpurConfig.notrackLocations.stream().noneMatch(locationData -> locationData.getName().equalsIgnoreCase(name))) {
@@ -90,15 +93,17 @@ public class NoTrackCommand extends Command {
                 }
 
                 PurpurConfig.LocationData locationData = PurpurConfig.notrackLocations.stream().filter(data -> data.getName().equalsIgnoreCase(name)).findFirst().orElse(null);
-                locationData.setEnabled(Boolean.parseBoolean(args[2]));
+                locationData.setRange(Integer.parseInt(args[2]));
 
                 save(locationData);
 
-                player.sendMessage(ChatColor.GREEN + "Updated tracking status on " + name + " notrack system.");
+                player.sendMessage(ChatColor.GREEN + "Updated range location from " + name + " notrack system.");
                 return true;
             }
+        }
 
-            if(args[0].equalsIgnoreCase("range")) {
+        if(args.length == 2) {
+            if(args[0].equalsIgnoreCase("toggle")) {
                 String name = args[1];
 
                 if(PurpurConfig.notrackLocations.stream().noneMatch(locationData -> locationData.getName().equalsIgnoreCase(name))) {
@@ -107,17 +112,19 @@ public class NoTrackCommand extends Command {
                 }
 
                 PurpurConfig.LocationData locationData = PurpurConfig.notrackLocations.stream().filter(data -> data.getName().equalsIgnoreCase(name)).findFirst().orElse(null);
-                locationData.setRange(Integer.parseInt(args[2]));
+                locationData.setEnabled(!locationData.enabled);
 
                 save(locationData);
 
-                player.sendMessage(ChatColor.GREEN + "Updated range location from " + name + " notrack system.");
+                if (locationData.enabled) {
+                    player.sendMessage(ChatColor.GREEN + "Notrack " + name + " is now enabled!");
+                } else {
+                    player.sendMessage(ChatColor.RED + "Notrack " + name + " is now disabled!");
+                }
                 return true;
             }
-        }
 
-        if(args.length == 2) {
-            if(args[0].equalsIgnoreCase("init")) {
+            if(args[0].equalsIgnoreCase("setloc")) {
                 String name = args[1];
 
                 if(PurpurConfig.notrackLocations.stream().noneMatch(locationData -> locationData.getName().equalsIgnoreCase(name))) {
@@ -150,13 +157,13 @@ public class NoTrackCommand extends Command {
         }
 
         sender.sendMessage(ChatColor.LIGHT_PURPLE + "NoTrack Commands");
-        sender.sendMessage(ChatColor.YELLOW + "/notrack set <name> <range> <rangeY>");
+        sender.sendMessage(ChatColor.YELLOW + "/notrack create <name> <range> <rangeY>");
         sender.sendMessage(ChatColor.YELLOW + "/notrack remove <name>");
-        sender.sendMessage(ChatColor.YELLOW + "/notrack yrange <name> <yrange>");
         sender.sendMessage(ChatColor.YELLOW + "/notrack range <name> <range>");
-        sender.sendMessage(ChatColor.YELLOW + "/notrack init <name>");
+        sender.sendMessage(ChatColor.YELLOW + "/notrack yrange <name> <yrange>");
+        sender.sendMessage(ChatColor.YELLOW + "/notrack setloc <name>");
+        sender.sendMessage(ChatColor.YELLOW + "/notrack toggle <name>");
         sender.sendMessage(ChatColor.YELLOW + "/notrack list");
-        sender.sendMessage(ChatColor.YELLOW + "/notrack toggle <name> <true|false>");
         return true;
     }
 }
